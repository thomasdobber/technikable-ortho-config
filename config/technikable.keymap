/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

/ {
    chosen { zmk,matrix_transform = &ortho_transform; };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <NAV_L NUM_L>;
            then-layer = <SYM_L>;
        };
    };

    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <16 15>;
        };

        bspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 20>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <21 19 20>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <14 15 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
&kp EQUAL   &kp Q  &kp W         &kp E         &kp R      &kp T                      &kp Y      &kp U             &kp I              &kp O    &kp P     &kp MINUS
&caps_word  &kp A  &kp S         &kp D         &kp F      &kp G                      &kp H      &kp J             &kp K              &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp GRAVE   &kp Z  &kp X         &kp C         &kp V      &kp B                      &kp N      &kp M             &kp COMMA          &kp DOT  &kp FSLH  &kp BACKSLASH
                   &kp LS(LGUI)  &kp LEFT_GUI  &mo NAV_L  &kp SPACE  &sk LEFT_SHIFT  &mo NUM_L  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&bt BT_CLR  &trans        &trans        &trans        &trans        &trans                &trans  &trans    &kp UP_ARROW  &trans     &trans  &trans
&trans      &kp LCTRL     &kp LALT      &kp LGUI      &kp LSHFT     &trans                &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &trans  &trans
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &trans  &trans    &trans        &trans     &trans  &trans
                          &trans        &trans        &trans        &trans        &trans  &trans  &trans    &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans         &trans  &trans           &trans    &trans    &trans     &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans         &trans  &kp RIGHT_SHIFT  &kp RGUI  &kp LALT  &kp RCTRL  &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans         &trans  &trans           &trans    &trans    &trans     &trans
                &trans  &kp N0  &trans  &none   &none  &trans  &trans           &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
&trans  &trans  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                &trans      &kp LS(N0)  &trans      &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
