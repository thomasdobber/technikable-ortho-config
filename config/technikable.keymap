/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&caps_word {
};

&lt { tapping-term-ms = <250>; };

/ {
    chosen { zmk,matrix_transform = &ortho_transform; };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        BLT {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    macros {
        /**
         * Temporarily switches to a layer (`&mo`) while a modifier is held.
         * Analogous to QMK's `LM()`, using a parameterized macro.
         *
         * Params:
         *  1. Layer to switch to
         *  2. Modifier to press while layer is active
         *
         * Example:
         *  `&lm NUM_LAYER LSHIFT`
         */

        lm: lm {
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1>,
                <&macro_press>,
                <&mo MACRO_PLACEHOLDER &macro_param_2to1>,
                <&macro_press>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_2to1>,
                <&macro_release>,
                <&kp MACRO_PLACEHOLDER &macro_param_1to1>,
                <&macro_release>,
                <&mo MACRO_PLACEHOLDER>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <15 14 13>;
        };

        ent {
            bindings = <&kp ENTER>;
            key-positions = <20 21 22>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <15 14>;
        };

        bspc {
            bindings = <&kp BSPC>;
            key-positions = <20 21>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <15 20>;
        };
    };

    behaviors {
        space: space {
            compatible = "zmk,behavior-tap-dance";
            label = "SPACE";
            #binding-cells = <0>;
            bindings = <&lt 1 SPACE>, <&lm 1 LSHFT>;
        };

        bspc: bspc {
            compatible = "zmk,behavior-tap-dance";
            label = "BSPC";
            #binding-cells = <0>;
            bindings = <&lt 2 BSPC>, <&lm 2 RSHFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
&kp Q  &kp W  &kp E   &kp R        &kp T   &trans          &trans  &kp Y  &kp U   &kp I      &kp O    &kp P
&kp A  &kp S  &kp D   &kp F        &kp G   &trans          &trans  &kp H  &kp J   &kp K      &kp L    &kp SEMI
&kp Z  &kp X  &kp C   &kp V        &kp B   &trans          &trans  &kp N  &kp M   &kp COMMA  &kp DOT  &kp FSLH
              &trans  &lt 1 SPACE  &trans  &trans  &trans  &trans  &mo 2  &trans
            >;
        };

        lower_layer {
            bindings = <
&kp LG(Q)        &kp LG(W)       &kp LG(L)       &kp LG(R)        &kp LG(T)  &trans          &trans  &trans  &kp GRAVE        &kp LEFT_BRACE             &kp RIGHT_BRACE             &trans
&mt LCTRL LG(A)  &mt LALT LG(S)  &mt LGUI LA(F)  &mt LSHFT LG(F)  &kp LG(G)  &trans          &trans  &trans  &mt RSHFT MINUS  &mt RGUI LEFT_PARENTHESIS  &mt LALT RIGHT_PARENTHESIS  &mt RCTRL EQUAL
&kp LG(Z)        &kp LG(X)       &kp LG(C)       &kp LG(V)        &kp LG(B)  &trans          &trans  &trans  &kp SQT          &kp LBKT                   &kp RBKT                    &kp BACKSLASH
                                 &trans          &trans           &trans     &trans  &trans  &trans  &trans  &trans
            >;

            label = "LOWER";
        };

        raise_layer {
            bindings = <
&trans        &kp N1       &kp N2       &kp N3        &trans  &trans          &trans  &trans  &kp LA(LEFT)    &kp UP         &kp LA(RIGHT)   &trans
&mt LCTRL N0  &mt LALT N4  &mt LGUI N5  &mt LSHFT N6  &trans  &trans          &trans  &trans  &mt RSHFT LEFT  &mt RGUI DOWN  &mt LALT RIGHT  &kp RCTRL
&trans        &kp N7       &kp N8       &kp N9        &trans  &trans          &trans  &trans  &trans          &trans         &trans          &trans
                           &trans       &trans        &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "RAISE";
        };

        bluetooth_layer {
            label = "BLT";
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &none         &none  &none   &none  &none  &none  &none
&none  &bt BT_SEL 3  &bt BT_SEL 4  &none         &none  &none         &none  &none   &none  &none  &none  &none
&none  &none         &none         &bt BT_CLR    &none  &none         &none  &none   &none  &none  &none  &none
                     &none         &trans        &none  &none  &none  &none  &trans  &none
            >;
        };
    };
};
