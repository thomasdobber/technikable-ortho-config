/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&caps_word {
};

/ {
    chosen { zmk,matrix_transform = &ortho_transform; };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        BT {
            if-layers = <1 2>;
            then-layer = <2>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <14 15 16>;
        };

        ent {
            bindings = <&kp ENTER>;
            key-positions = <20 19 21>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <16 15>;
        };

        bspc {
            bindings = <&kp BSPC>;
            key-positions = <19 20>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
    };

    macros {
        braces_macro: brace_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RBRC>;
            label = "BRACE_MACRO";
        };

        brackets_macro: bracket_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET>;
            label = "BRACKET_MACRO";
        };

        parenthesis_macro: parenthesis_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS>;
            label = "PARENTHESIS_MACRO";
        };

        angle_brackets_macro: angle_brackets_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp GT>;
            label = "ANGLE_BRACKETS_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W     &kp E     &kp R      &kp T              &kp Y  &kp U   &kp I      &kp O    &kp P     &kp BSPC
&kp ESC    &kp A  &kp S     &kp D     &kp F      &kp G              &kp H  &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X     &kp C     &kp V      &kp B              &kp N  &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RET
                  &kp LALT  &kp LGUI  &kp SPACE  &kp LCTRL  &trans  &mo 1  &trans  &mo 2
            >;
        };

        sym_layer {
            bindings = <
&trans      &trans  &kp N1  &kp N2  &kp N3  &trans          &trans  &kp MINUS  &kp UP    &kp EQUAL  &trans    &kp DEL
&trans      &kp N0  &kp N4  &kp N5  &kp N6  &trans          &trans  &kp LEFT   &kp DOWN  &kp RIGHT  &kp BSLH  &trans
&caps_word  &trans  &kp N7  &kp N8  &kp N9  &trans          &trans  &kp GRAVE  &kp LBKT  &kp RBKT   &trans    &trans
                    &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans
            >;

            label = "SYM";
        };

        bluetooth_layer {
            label = "BT";
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4         &none  &none   &trans  &none   &none  &none
&none  &bt BT_CLR    &none         &none         &none         &none                &none  &trans  &trans  &trans  &none  &none
&none  &none         &none         &none         &none         &none                &none  &none   &none   &none   &none  &none
                     &none         &none         &none         &none         &none  &none  &none   &trans
            >;
        };
    };
};
